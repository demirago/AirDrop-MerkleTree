{"id":"c06d41b21afd71c10cea3498e88899bd","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/MerkleDistributor.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract MerkleDistributor {\r\n    address public immutable token;  \r\n    bytes32 public immutable merkleRoot;\r\n    uint256 public dropAmount;\r\n\r\n    mapping(address => uint) private addressesClaimed;\r\n\r\n    // This is a packed array of booleans.\r\n    mapping(uint256 => uint256) private claimedBitMap;\r\n\r\n    event Claimed(address indexed _from, uint _dropAmount);\r\n\r\n    constructor(address token_, bytes32 merkleRoot_, uint256 dropAmount_) {\r\n        token = token_;\r\n        merkleRoot = merkleRoot_;\r\n        dropAmount = dropAmount_;\r\n    }\r\n\r\n    function claim(bytes32[] calldata merkleProof) external {\r\n        require(addressesClaimed[msg.sender] == 0, 'MerkleDistributor: Drop already claimed.');\r\n        // Verify the merkle proof.\r\n        bytes32 node = keccak256(abi.encodePacked(msg.sender));\r\n        require(MerkleProof.verify(merkleProof, merkleRoot, node), 'MerkleDistributor: Invalid proof.');\r\n        // Mark it claimed and send the token.\r\n        addressesClaimed[msg.sender] = 1;\r\n        require(IERC20(token).transfer(msg.sender, dropAmount), 'MerkleDistributor: Transfer failed.');\r\n\r\n        emit Claimed(msg.sender,dropAmount);\r\n    }\r\n}"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n     * consuming from one or the other at each step according to the instructions given by\n     * `proofFlags`.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2707:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2727:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0","usedErrors":[]}],"src":"106:2661:0"},"id":0},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[579]},"id":580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"143:655:1","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."},"fullyImplemented":true,"id":579,"linearizedBaseContracts":[579],"name":"MerkleProof","nameLocation":"807:11:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":100,"nodeType":"Block","src":"1280:57:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":94,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1310:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":95,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1317:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":93,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1297:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":97,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1326:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1297:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":92,"id":99,"nodeType":"Return","src":"1290:40:1"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"825:323:1","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":101,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1162:6:1","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"proof","nameLocation":"1195:5:1","nodeType":"VariableDeclaration","scope":101,"src":"1178:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1178:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":83,"nodeType":"ArrayTypeName","src":"1178:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"root","nameLocation":"1218:4:1","nodeType":"VariableDeclaration","scope":101,"src":"1210:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":85,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"leaf","nameLocation":"1240:4:1","nodeType":"VariableDeclaration","scope":101,"src":"1232:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":87,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1232:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:82:1"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101,"src":"1274:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":90,"name":"bool","nodeType":"ElementaryTypeName","src":"1274:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1273:6:1"},"scope":579,"src":"1153:184:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":121,"nodeType":"Block","src":"1575:65:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":115,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1613:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":116,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"1620:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":114,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1592:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1592:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":118,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"1629:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1592:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":113,"id":120,"nodeType":"Return","src":"1585:48:1"}]},"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"1343:90:1","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1447:14:1","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"proof","nameLocation":"1490:5:1","nodeType":"VariableDeclaration","scope":122,"src":"1471:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":104,"nodeType":"ArrayTypeName","src":"1471:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"root","nameLocation":"1513:4:1","nodeType":"VariableDeclaration","scope":122,"src":"1505:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1505:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"leaf","nameLocation":"1535:4:1","nodeType":"VariableDeclaration","scope":122,"src":"1527:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1527:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:84:1"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":122,"src":"1569:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"1569:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1568:6:1"},"scope":579,"src":"1438:202:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"2083:198:1","statements":[{"assignments":[134],"declarations":[{"constant":false,"id":134,"mutability":"mutable","name":"computedHash","nameLocation":"2101:12:1","nodeType":"VariableDeclaration","scope":161,"src":"2093:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2093:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":136,"initialValue":{"id":135,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2116:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2093:27:1"},{"body":{"id":157,"nodeType":"Block","src":"2173:73:1","statements":[{"expression":{"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2187:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":150,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2212:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":151,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2226:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":153,"indexExpression":{"id":152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2232:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2226:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":149,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2202:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2202:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2187:48:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":156,"nodeType":"ExpressionStatement","src":"2187:48:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2150:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":142,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2154:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2154:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2150:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"initializationExpression":{"assignments":[138],"declarations":[{"constant":false,"id":138,"mutability":"mutable","name":"i","nameLocation":"2143:1:1","nodeType":"VariableDeclaration","scope":158,"src":"2135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":140,"initialValue":{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2135:13:1"},"loopExpression":{"expression":{"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2168:3:1","subExpression":{"id":145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":147,"nodeType":"ExpressionStatement","src":"2168:3:1"},"nodeType":"ForStatement","src":"2130:116:1"},{"expression":{"id":159,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2262:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":132,"id":160,"nodeType":"Return","src":"2255:19:1"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"1646:340:1","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":162,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2000:12:1","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"proof","nameLocation":"2030:5:1","nodeType":"VariableDeclaration","scope":162,"src":"2013:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":125,"nodeType":"ArrayTypeName","src":"2013:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"leaf","nameLocation":"2045:4:1","nodeType":"VariableDeclaration","scope":162,"src":"2037:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2012:38:1"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"2074:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2073:9:1"},"scope":579,"src":"1991:290:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"2490:198:1","statements":[{"assignments":[174],"declarations":[{"constant":false,"id":174,"mutability":"mutable","name":"computedHash","nameLocation":"2508:12:1","nodeType":"VariableDeclaration","scope":201,"src":"2500:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2500:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":176,"initialValue":{"id":175,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2523:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2500:27:1"},{"body":{"id":197,"nodeType":"Block","src":"2580:73:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":188,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2594:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":190,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2619:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":191,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2633:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":193,"indexExpression":{"id":192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2639:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2633:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":189,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2609:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2609:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2594:48:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":196,"nodeType":"ExpressionStatement","src":"2594:48:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2557:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":182,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2561:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2561:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2557:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":198,"initializationExpression":{"assignments":[178],"declarations":[{"constant":false,"id":178,"mutability":"mutable","name":"i","nameLocation":"2550:1:1","nodeType":"VariableDeclaration","scope":198,"src":"2542:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":180,"initialValue":{"hexValue":"30","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2554:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2542:13:1"},"loopExpression":{"expression":{"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2575:3:1","subExpression":{"id":185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2575:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":187,"nodeType":"ExpressionStatement","src":"2575:3:1"},"nodeType":"ForStatement","src":"2537:116:1"},{"expression":{"id":199,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2669:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":172,"id":200,"nodeType":"Return","src":"2662:19:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"2287:96:1","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2397:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"proof","nameLocation":"2437:5:1","nodeType":"VariableDeclaration","scope":202,"src":"2418:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2418:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":165,"nodeType":"ArrayTypeName","src":"2418:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"leaf","nameLocation":"2452:4:1","nodeType":"VariableDeclaration","scope":202,"src":"2444:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2444:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2417:40:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2481:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:9:1"},"scope":579,"src":"2388:300:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"3116:76:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":220,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3151:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":221,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"3158:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":222,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3170:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":219,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3133:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3133:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":224,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3181:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3133:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":218,"id":226,"nodeType":"Return","src":"3126:59:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2694:235:1","text":" @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n _Available since v4.7._"},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2943:16:1","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"proof","nameLocation":"2986:5:1","nodeType":"VariableDeclaration","scope":228,"src":"2969:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2969:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":205,"nodeType":"ArrayTypeName","src":"2969:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"proofFlags","nameLocation":"3015:10:1","nodeType":"VariableDeclaration","scope":228,"src":"3001:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":207,"name":"bool","nodeType":"ElementaryTypeName","src":"3001:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":208,"nodeType":"ArrayTypeName","src":"3001:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"root","nameLocation":"3043:4:1","nodeType":"VariableDeclaration","scope":228,"src":"3035:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3035:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"leaves","nameLocation":"3074:6:1","nodeType":"VariableDeclaration","scope":228,"src":"3057:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3057:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":213,"nodeType":"ArrayTypeName","src":"3057:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2959:127:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"3110:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":216,"name":"bool","nodeType":"ElementaryTypeName","src":"3110:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3109:6:1"},"scope":579,"src":"2934:258:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"3497:84:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":246,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"3540:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":247,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3547:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":248,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3559:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":245,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3514:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3514:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":250,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3570:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3514:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":244,"id":252,"nodeType":"Return","src":"3507:67:1"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"3198:100:1","text":" @dev Calldata version of {multiProofVerify}\n _Available since v4.7._"},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3312:24:1","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"proof","nameLocation":"3365:5:1","nodeType":"VariableDeclaration","scope":254,"src":"3346:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":231,"nodeType":"ArrayTypeName","src":"3346:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"proofFlags","nameLocation":"3396:10:1","nodeType":"VariableDeclaration","scope":254,"src":"3380:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"3380:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":234,"nodeType":"ArrayTypeName","src":"3380:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"root","nameLocation":"3424:4:1","nodeType":"VariableDeclaration","scope":254,"src":"3416:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"leaves","nameLocation":"3455:6:1","nodeType":"VariableDeclaration","scope":254,"src":"3438:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":239,"nodeType":"ArrayTypeName","src":"3438:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3336:131:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"3491:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":242,"name":"bool","nodeType":"ElementaryTypeName","src":"3491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3490:6:1"},"scope":579,"src":"3303:278:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":398,"nodeType":"Block","src":"4029:1860:1","statements":[{"assignments":[270],"declarations":[{"constant":false,"id":270,"mutability":"mutable","name":"leavesLen","nameLocation":"4420:9:1","nodeType":"VariableDeclaration","scope":398,"src":"4412:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":273,"initialValue":{"expression":{"id":271,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4432:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4432:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4412:33:1"},{"assignments":[275],"declarations":[{"constant":false,"id":275,"mutability":"mutable","name":"totalHashes","nameLocation":"4463:11:1","nodeType":"VariableDeclaration","scope":398,"src":"4455:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":278,"initialValue":{"expression":{"id":276,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4477:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4477:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4455:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"4546:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":281,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4558:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4558:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4546:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":286,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4578:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4538:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4538:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4538:87:1"},{"assignments":[295],"declarations":[{"constant":false,"id":295,"mutability":"mutable","name":"hashes","nameLocation":"4887:6:1","nodeType":"VariableDeclaration","scope":398,"src":"4870:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":294,"nodeType":"ArrayTypeName","src":"4870:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":301,"initialValue":{"arguments":[{"id":299,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4910:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4896:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":297,"nodeType":"ArrayTypeName","src":"4900:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4896:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4870:52:1"},{"assignments":[303],"declarations":[{"constant":false,"id":303,"mutability":"mutable","name":"leafPos","nameLocation":"4940:7:1","nodeType":"VariableDeclaration","scope":398,"src":"4932:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4932:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":305,"initialValue":{"hexValue":"30","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4932:19:1"},{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"hashPos","nameLocation":"4969:7:1","nodeType":"VariableDeclaration","scope":398,"src":"4961:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":309,"initialValue":{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4979:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4961:19:1"},{"assignments":[311],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"proofPos","nameLocation":"4998:8:1","nodeType":"VariableDeclaration","scope":398,"src":"4990:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4990:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":313,"initialValue":{"hexValue":"30","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5009:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4990:20:1"},{"body":{"id":371,"nodeType":"Block","src":"5427:258:1","statements":[{"assignments":[325],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"a","nameLocation":"5449:1:1","nodeType":"VariableDeclaration","scope":371,"src":"5441:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5441:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":338,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":326,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5453:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":327,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5463:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":333,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5495:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":336,"indexExpression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5502:9:1","subExpression":{"id":334,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5502:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5495:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5453:59:1","trueExpression":{"baseExpression":{"id":329,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"5475:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":332,"indexExpression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5482:9:1","subExpression":{"id":330,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5482:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5441:71:1"},{"assignments":[340],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"b","nameLocation":"5534:1:1","nodeType":"VariableDeclaration","scope":371,"src":"5526:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5526:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":361,"initialValue":{"condition":{"baseExpression":{"id":341,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5538:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":343,"indexExpression":{"id":342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5549:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5538:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":356,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"5616:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":359,"indexExpression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5622:10:1","subExpression":{"id":357,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5622:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5616:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5538:95:1","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5554:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":345,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5564:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5554:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":351,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5596:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":354,"indexExpression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5603:9:1","subExpression":{"id":352,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5554:59:1","trueExpression":{"baseExpression":{"id":347,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"5576:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":350,"indexExpression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5583:9:1","subExpression":{"id":348,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5583:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5576:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5526:107:1"},{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":362,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5647:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":364,"indexExpression":{"id":363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5654:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5647:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5669:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5672:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":365,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"5659:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5659:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5647:27:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":370,"nodeType":"ExpressionStatement","src":"5647:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5405:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":319,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5409:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5405:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":372,"initializationExpression":{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"i","nameLocation":"5398:1:1","nodeType":"VariableDeclaration","scope":372,"src":"5390:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":317,"initialValue":{"hexValue":"30","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5402:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5390:13:1"},"loopExpression":{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5422:3:1","subExpression":{"id":321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5422:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":323,"nodeType":"ExpressionStatement","src":"5422:3:1"},"nodeType":"ForStatement","src":"5385:300:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5699:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5713:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5699:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5781:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5793:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":395,"nodeType":"Block","src":"5843:40:1","statements":[{"expression":{"baseExpression":{"id":391,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"5864:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":393,"indexExpression":{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5864:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":268,"id":394,"nodeType":"Return","src":"5857:15:1"}]},"id":396,"nodeType":"IfStatement","src":"5777:106:1","trueBody":{"id":390,"nodeType":"Block","src":"5796:41:1","statements":[{"expression":{"baseExpression":{"id":386,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"5817:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":388,"indexExpression":{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5817:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":268,"id":389,"nodeType":"Return","src":"5810:16:1"}]}},"id":397,"nodeType":"IfStatement","src":"5695:188:1","trueBody":{"id":382,"nodeType":"Block","src":"5716:55:1","statements":[{"expression":{"baseExpression":{"id":376,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5737:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":380,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":377,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5744:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5744:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:23:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":268,"id":381,"nodeType":"Return","src":"5730:30:1"}]}}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"3587:262:1","text":" @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n consuming from one or the other at each step according to the instructions given by\n `proofFlags`.\n _Available since v4.7._"},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"3863:17:1","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"proof","nameLocation":"3907:5:1","nodeType":"VariableDeclaration","scope":399,"src":"3890:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3890:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":257,"nodeType":"ArrayTypeName","src":"3890:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"proofFlags","nameLocation":"3936:10:1","nodeType":"VariableDeclaration","scope":399,"src":"3922:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":259,"name":"bool","nodeType":"ElementaryTypeName","src":"3922:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":260,"nodeType":"ArrayTypeName","src":"3922:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"leaves","nameLocation":"3973:6:1","nodeType":"VariableDeclaration","scope":399,"src":"3956:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":263,"nodeType":"ArrayTypeName","src":"3956:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3880:105:1"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"merkleRoot","nameLocation":"4017:10:1","nodeType":"VariableDeclaration","scope":399,"src":"4009:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4009:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4008:20:1"},"scope":579,"src":"3854:2035:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"6188:1860:1","statements":[{"assignments":[415],"declarations":[{"constant":false,"id":415,"mutability":"mutable","name":"leavesLen","nameLocation":"6579:9:1","nodeType":"VariableDeclaration","scope":543,"src":"6571:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"6571:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":418,"initialValue":{"expression":{"id":416,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6591:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6591:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6571:33:1"},{"assignments":[420],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"totalHashes","nameLocation":"6622:11:1","nodeType":"VariableDeclaration","scope":543,"src":"6614:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"expression":{"id":421,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6636:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6636:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6614:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6705:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":426,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6717:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6717:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6705:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":431,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6737:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6750:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6697:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6697:87:1"},{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"hashes","nameLocation":"7046:6:1","nodeType":"VariableDeclaration","scope":543,"src":"7029:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7029:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":439,"nodeType":"ArrayTypeName","src":"7029:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":446,"initialValue":{"arguments":[{"id":444,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7069:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7055:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7059:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":442,"nodeType":"ArrayTypeName","src":"7059:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7055:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7029:52:1"},{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"leafPos","nameLocation":"7099:7:1","nodeType":"VariableDeclaration","scope":543,"src":"7091:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":450,"initialValue":{"hexValue":"30","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7109:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7091:19:1"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"hashPos","nameLocation":"7128:7:1","nodeType":"VariableDeclaration","scope":543,"src":"7120:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":454,"initialValue":{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7120:19:1"},{"assignments":[456],"declarations":[{"constant":false,"id":456,"mutability":"mutable","name":"proofPos","nameLocation":"7157:8:1","nodeType":"VariableDeclaration","scope":543,"src":"7149:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"7149:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":458,"initialValue":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7149:20:1"},{"body":{"id":516,"nodeType":"Block","src":"7586:258:1","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"a","nameLocation":"7608:1:1","nodeType":"VariableDeclaration","scope":516,"src":"7600:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7600:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":483,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":472,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7622:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7612:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":478,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7654:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":481,"indexExpression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7661:9:1","subExpression":{"id":479,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7661:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7654:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7612:59:1","trueExpression":{"baseExpression":{"id":474,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"7634:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":477,"indexExpression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7641:9:1","subExpression":{"id":475,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7641:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7634:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7600:71:1"},{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"b","nameLocation":"7693:1:1","nodeType":"VariableDeclaration","scope":516,"src":"7685:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7685:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":506,"initialValue":{"condition":{"baseExpression":{"id":486,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"7697:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":488,"indexExpression":{"id":487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7708:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7697:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":501,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"7775:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":504,"indexExpression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7781:10:1","subExpression":{"id":502,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7781:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7775:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7697:95:1","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":489,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7713:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":490,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7723:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7713:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":496,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7755:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":499,"indexExpression":{"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7762:9:1","subExpression":{"id":497,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7755:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7713:59:1","trueExpression":{"baseExpression":{"id":492,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"7735:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":495,"indexExpression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7742:9:1","subExpression":{"id":493,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7742:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7735:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7685:107:1"},{"expression":{"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":507,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7806:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":509,"indexExpression":{"id":508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7806:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7828:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7831:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":510,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"7818:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7806:27:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":515,"nodeType":"ExpressionStatement","src":"7806:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7564:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":464,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7568:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7564:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"initializationExpression":{"assignments":[460],"declarations":[{"constant":false,"id":460,"mutability":"mutable","name":"i","nameLocation":"7557:1:1","nodeType":"VariableDeclaration","scope":517,"src":"7549:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"7549:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":462,"initialValue":{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7561:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7549:13:1"},"loopExpression":{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7581:3:1","subExpression":{"id":466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7581:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"7581:3:1"},"nodeType":"ForStatement","src":"7544:300:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":518,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7858:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7858:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":528,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7940:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7940:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":540,"nodeType":"Block","src":"8002:40:1","statements":[{"expression":{"baseExpression":{"id":536,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8023:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":538,"indexExpression":{"hexValue":"30","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8023:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":413,"id":539,"nodeType":"Return","src":"8016:15:1"}]},"id":541,"nodeType":"IfStatement","src":"7936:106:1","trueBody":{"id":535,"nodeType":"Block","src":"7955:41:1","statements":[{"expression":{"baseExpression":{"id":531,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"7976:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":533,"indexExpression":{"hexValue":"30","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7976:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":413,"id":534,"nodeType":"Return","src":"7969:16:1"}]}},"id":542,"nodeType":"IfStatement","src":"7854:188:1","trueBody":{"id":527,"nodeType":"Block","src":"7875:55:1","statements":[{"expression":{"baseExpression":{"id":521,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7896:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":525,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":522,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7903:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7917:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7903:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7896:23:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":413,"id":526,"nodeType":"Return","src":"7889:30:1"}]}}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"5895:101:1","text":" @dev Calldata version of {processMultiProof}\n _Available since v4.7._"},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6010:25:1","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"proof","nameLocation":"6064:5:1","nodeType":"VariableDeclaration","scope":544,"src":"6045:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6045:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":402,"nodeType":"ArrayTypeName","src":"6045:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"proofFlags","nameLocation":"6095:10:1","nodeType":"VariableDeclaration","scope":544,"src":"6079:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":404,"name":"bool","nodeType":"ElementaryTypeName","src":"6079:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":405,"nodeType":"ArrayTypeName","src":"6079:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"leaves","nameLocation":"6132:6:1","nodeType":"VariableDeclaration","scope":544,"src":"6115:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6115:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":408,"nodeType":"ArrayTypeName","src":"6115:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6035:109:1"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"merkleRoot","nameLocation":"6176:10:1","nodeType":"VariableDeclaration","scope":544,"src":"6168:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6168:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6167:20:1"},"scope":579,"src":"6001:2047:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"8126:75:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8143:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"8147:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8143:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"8189:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8192:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":560,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8174:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8174:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8143:51:1","trueExpression":{"arguments":[{"id":557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8166:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"8169:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":556,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8151:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8151:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":552,"id":565,"nodeType":"Return","src":"8136:58:1"}]},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8063:9:1","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"a","nameLocation":"8081:1:1","nodeType":"VariableDeclaration","scope":567,"src":"8073:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8073:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"b","nameLocation":"8092:1:1","nodeType":"VariableDeclaration","scope":567,"src":"8084:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8072:22:1"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"8117:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8117:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8116:9:1"},"scope":579,"src":"8054:147:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":577,"nodeType":"Block","src":"8290:178:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8352:110:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8373:4:1","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"8379:1:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8366:6:1"},"nodeType":"YulFunctionCall","src":"8366:15:1"},"nodeType":"YulExpressionStatement","src":"8366:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8401:4:1","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"8407:1:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8394:6:1"},"nodeType":"YulFunctionCall","src":"8394:15:1"},"nodeType":"YulExpressionStatement","src":"8394:15:1"},{"nodeType":"YulAssignment","src":"8422:30:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8441:4:1","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"8447:4:1","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8431:9:1"},"nodeType":"YulFunctionCall","src":"8431:21:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8422:5:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":569,"isOffset":false,"isSlot":false,"src":"8379:1:1","valueSize":1},{"declaration":571,"isOffset":false,"isSlot":false,"src":"8407:1:1","valueSize":1},{"declaration":574,"isOffset":false,"isSlot":false,"src":"8422:5:1","valueSize":1}],"id":576,"nodeType":"InlineAssembly","src":"8343:119:1"}]},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"8216:14:1","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"a","nameLocation":"8239:1:1","nodeType":"VariableDeclaration","scope":578,"src":"8231:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8231:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"b","nameLocation":"8250:1:1","nodeType":"VariableDeclaration","scope":578,"src":"8242:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8242:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8230:22:1"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"value","nameLocation":"8283:5:1","nodeType":"VariableDeclaration","scope":578,"src":"8275:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8275:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8274:15:1"},"scope":579,"src":"8207:261:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":580,"src":"799:7671:1","usedErrors":[]}],"src":"118:8353:1"},"id":1},"contracts/MerkleDistributor.sol":{"ast":{"absolutePath":"contracts/MerkleDistributor.sol","exportedSymbols":{"IERC20":[77],"MerkleDistributor":[688],"MerkleProof":[579]},"id":689,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":581,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"40:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":689,"sourceUnit":78,"src":"67:56:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":689,"sourceUnit":580,"src":"125:68:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleDistributor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":688,"linearizedBaseContracts":[688],"name":"MerkleDistributor","nameLocation":"206:17:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":585,"mutability":"immutable","name":"token","nameLocation":"256:5:2","nodeType":"VariableDeclaration","scope":688,"src":"231:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":587,"mutability":"immutable","name":"merkleRoot","nameLocation":"295:10:2","nodeType":"VariableDeclaration","scope":688,"src":"270:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"270:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"05748be2","id":589,"mutability":"mutable","name":"dropAmount","nameLocation":"327:10:2","nodeType":"VariableDeclaration","scope":688,"src":"312:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":593,"mutability":"mutable","name":"addressesClaimed","nameLocation":"379:16:2","nodeType":"VariableDeclaration","scope":688,"src":"346:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":592,"keyType":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"346:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"365:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":597,"mutability":"mutable","name":"claimedBitMap","nameLocation":"484:13:2","nodeType":"VariableDeclaration","scope":688,"src":"448:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":596,"keyType":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"448:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"id":603,"name":"Claimed","nameLocation":"512:7:2","nodeType":"EventDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"536:5:2","nodeType":"VariableDeclaration","scope":603,"src":"520:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"520:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"indexed":false,"mutability":"mutable","name":"_dropAmount","nameLocation":"548:11:2","nodeType":"VariableDeclaration","scope":603,"src":"543:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint","nodeType":"ElementaryTypeName","src":"543:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"519:41:2"},"src":"506:55:2"},{"body":{"id":624,"nodeType":"Block","src":"639:103:2","statements":[{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":612,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"650:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":613,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"658:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"650:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":615,"nodeType":"ExpressionStatement","src":"650:14:2"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":616,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"675:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":617,"name":"merkleRoot_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"688:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"675:24:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":619,"nodeType":"ExpressionStatement","src":"675:24:2"},{"expression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":620,"name":"dropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"710:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":621,"name":"dropAmount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"723:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"710:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":623,"nodeType":"ExpressionStatement","src":"710:24:2"}]},"id":625,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"token_","nameLocation":"589:6:2","nodeType":"VariableDeclaration","scope":625,"src":"581:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"merkleRoot_","nameLocation":"605:11:2","nodeType":"VariableDeclaration","scope":625,"src":"597:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"597:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"dropAmount_","nameLocation":"626:11:2","nodeType":"VariableDeclaration","scope":625,"src":"618:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:58:2"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"639:0:2"},"scope":688,"src":"569:173:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":686,"nodeType":"Block","src":"806:557:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":632,"name":"addressesClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"825:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":635,"indexExpression":{"expression":{"id":633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"842:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"825:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"825:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"860:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c","typeString":"literal_string \"MerkleDistributor: Drop already claimed.\""},"value":"MerkleDistributor: Drop already claimed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c","typeString":"literal_string \"MerkleDistributor: Drop already claimed.\""}],"id":631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"817:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"817:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"817:86:2"},{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"node","nameLocation":"959:4:2","nodeType":"VariableDeclaration","scope":686,"src":"951:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"951:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":650,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"993:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"993:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":644,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"976:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"976:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"976:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":643,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"966:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"966:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"951:54:2"},{"expression":{"arguments":[{"arguments":[{"id":654,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1043:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":655,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"1056:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":656,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1068:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":652,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1024:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$579_$","typeString":"type(library MerkleProof)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":101,"src":"1024:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1075:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2","typeString":"literal_string \"MerkleDistributor: Invalid proof.\""},"value":"MerkleDistributor: Invalid proof."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2","typeString":"literal_string \"MerkleDistributor: Invalid proof.\""}],"id":651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1016:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1016:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"1016:95:2"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":661,"name":"addressesClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1170:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":664,"indexExpression":{"expression":{"id":662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1187:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1187:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1170:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1201:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1170:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":667,"nodeType":"ExpressionStatement","src":"1170:32:2"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1244:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1244:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"dropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1256:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":670,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"1228:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":669,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1221:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1221:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1221:22:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1221:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642e","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1269:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e","typeString":"literal_string \"MerkleDistributor: Transfer failed.\""},"value":"MerkleDistributor: Transfer failed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e","typeString":"literal_string \"MerkleDistributor: Transfer failed.\""}],"id":668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1213:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1213:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"1213:94:2"},{"eventCall":{"arguments":[{"expression":{"id":681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1333:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1333:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"dropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1344:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":680,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"1325:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1325:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"EmitStatement","src":"1320:35:2"}]},"functionSelector":"b391c508","id":687,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"759:5:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"merkleProof","nameLocation":"784:11:2","nodeType":"VariableDeclaration","scope":687,"src":"765:30:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"765:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"ArrayTypeName","src":"765:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"764:32:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"806:0:2"},"scope":688,"src":"750:613:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":689,"src":"197:1169:2","usedErrors":[]}],"src":"40:1326:2"},"id":2}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209404bd729de1008421d2394602dcb262c3d78f2c0725745252c52b070b7e04fd64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DIV 0xBD PUSH19 0x9DE1008421D2394602DCB262C3D78F2C072574 MSTORE MSTORE 0xC5 0x2B SMOD SIGNEXTEND PUSH31 0x4FD64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"799:7671:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;799:7671:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209404bd729de1008421d2394602dcb262c3d78f2c0725745252c52b070b7e04fd64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DIV 0xBD PUSH19 0x9DE1008421D2394602DCB262C3D78F2C072574 MSTORE MSTORE 0xC5 0x2B SMOD SIGNEXTEND PUSH31 0x4FD64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"799:7671:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]}},\"version\":1}"}},"contracts/MerkleDistributor.sol":{"MerkleDistributor":{"abi":[{"inputs":[{"internalType":"address","name":"token_","type":"address"},{"internalType":"bytes32","name":"merkleRoot_","type":"bytes32"},{"internalType":"uint256","name":"dropAmount_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"uint256","name":"_dropAmount","type":"uint256"}],"name":"Claimed","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dropAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_625":{"entryPoint":null,"id":625,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_addresst_bytes32t_uint256_fromMemory":{"entryPoint":72,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:428:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"129:297:3","statements":[{"body":{"nodeType":"YulBlock","src":"175:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"184:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"187:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"177:6:3"},"nodeType":"YulFunctionCall","src":"177:12:3"},"nodeType":"YulExpressionStatement","src":"177:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"150:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"159:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:3"},"nodeType":"YulFunctionCall","src":"146:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"171:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"142:3:3"},"nodeType":"YulFunctionCall","src":"142:32:3"},"nodeType":"YulIf","src":"139:52:3"},{"nodeType":"YulVariableDeclaration","src":"200:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"219:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"213:5:3"},"nodeType":"YulFunctionCall","src":"213:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"204:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"292:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"301:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"304:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"294:6:3"},"nodeType":"YulFunctionCall","src":"294:12:3"},"nodeType":"YulExpressionStatement","src":"294:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"251:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"262:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"277:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"282:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"273:3:3"},"nodeType":"YulFunctionCall","src":"273:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"286:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"269:3:3"},"nodeType":"YulFunctionCall","src":"269:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"258:3:3"},"nodeType":"YulFunctionCall","src":"258:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"248:2:3"},"nodeType":"YulFunctionCall","src":"248:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"241:6:3"},"nodeType":"YulFunctionCall","src":"241:50:3"},"nodeType":"YulIf","src":"238:70:3"},{"nodeType":"YulAssignment","src":"317:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"327:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"317:6:3"}]},{"nodeType":"YulAssignment","src":"341:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"361:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"372:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"357:3:3"},"nodeType":"YulFunctionCall","src":"357:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"351:5:3"},"nodeType":"YulFunctionCall","src":"351:25:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"341:6:3"}]},{"nodeType":"YulAssignment","src":"385:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"416:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"401:3:3"},"nodeType":"YulFunctionCall","src":"401:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"395:5:3"},"nodeType":"YulFunctionCall","src":"395:25:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"385:6:3"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"79:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"90:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"102:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"110:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"118:6:3","type":""}],"src":"14:412:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b506040516105f33803806105f383398101604081905261002f91610048565b6001600160a01b0390921660805260a05260005561008b565b60008060006060848603121561005d57600080fd5b83516001600160a01b038116811461007457600080fd5b602085015160409095015190969495509392505050565b60805160a0516105376100bc60003960008181607201526101c901526000818160ae015261028501526105376000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806305748be2146100515780632eb4a7ab1461006d578063b391c50814610094578063fc0c546a146100a9575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61005a7f000000000000000000000000000000000000000000000000000000000000000081565b6100a76100a236600461042b565b6100e8565b005b6100d07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b336000908152600160205260409020541561015b5760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201526731b630b4b6b2b21760c11b60648201526084015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506101f48383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506103969050565b61024a5760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b6064820152608401610152565b336000818152600160208190526040808320919091559054905163a9059cbb60e01b8152600481019290925260248201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156102c957600080fd5b505af11580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906104a0565b6103595760405162461bcd60e51b815260206004820152602360248201527f4d65726b6c654469737472696275746f723a205472616e73666572206661696c60448201526232b21760e91b6064820152608401610152565b60005460405190815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505050565b6000826103a385846103ac565b14949350505050565b600081815b84518110156103f1576103dd828683815181106103d0576103d06104c2565b60200260200101516103f9565b9150806103e9816104d8565b9150506103b1565b509392505050565b6000818310610415576000828152602084905260409020610424565b60008381526020839052604090205b9392505050565b6000806020838503121561043e57600080fd5b823567ffffffffffffffff8082111561045657600080fd5b818501915085601f83011261046a57600080fd5b81358181111561047957600080fd5b8660208260051b850101111561048e57600080fd5b60209290920196919550909350505050565b6000602082840312156104b257600080fd5b8151801515811461042457600080fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156104fa57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f3acd0a42116d1a26a350b8e6038f8169688172f46ad1eaa85e6515174cdad5c64736f6c63430008090033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F3 CODESIZE SUB DUP1 PUSH2 0x5F3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x0 SSTORE PUSH2 0x8B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x537 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x72 ADD MSTORE PUSH2 0x1C9 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xAE ADD MSTORE PUSH2 0x285 ADD MSTORE PUSH2 0x537 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5748BE2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A2044726F7020616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x31B630B4B6B2B217 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1F4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH32 0x0 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x396 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A20496E76616C69642070726F6F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x152 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A205472616E73666572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x32B217 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A3 DUP6 DUP5 PUSH2 0x3AC JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH2 0x3DD DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3D0 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x3E9 DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x415 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xAC 0xD0 LOG4 0x21 AND 0xD1 LOG2 PUSH11 0x350B8E6038F8169688172F CHAINID 0xAD 0x1E 0xAA DUP6 0xE6 MLOAD MLOAD PUSH21 0xCDAD5C64736F6C6343000809003300000000000000 ","sourceMap":"197:1169:2:-:0;;;569:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;650:14:2;;;;;675:24;;710:10;:24;197:1169;;14:412:3;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:3;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:3;14:412;-1:-1:-1;;;14:412:3:o;:::-;197:1169:2;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_578":{"entryPoint":null,"id":578,"parameterSlots":2,"returnSlots":1},"@_hashPair_567":{"entryPoint":1017,"id":567,"parameterSlots":2,"returnSlots":1},"@claim_687":{"entryPoint":232,"id":687,"parameterSlots":2,"returnSlots":0},"@dropAmount_589":{"entryPoint":null,"id":589,"parameterSlots":0,"returnSlots":0},"@merkleRoot_587":{"entryPoint":null,"id":587,"parameterSlots":0,"returnSlots":0},"@processProof_162":{"entryPoint":940,"id":162,"parameterSlots":2,"returnSlots":1},"@token_585":{"entryPoint":null,"id":585,"parameterSlots":0,"returnSlots":0},"@verify_101":{"entryPoint":918,"id":101,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1240,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1218,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3582:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:3","statements":[{"nodeType":"YulAssignment","src":"125:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:3"},"nodeType":"YulFunctionCall","src":"133:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:3"},"nodeType":"YulFunctionCall","src":"160:25:3"},"nodeType":"YulExpressionStatement","src":"160:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:3","type":""}],"src":"14:177:3"},{"body":{"nodeType":"YulBlock","src":"297:76:3","statements":[{"nodeType":"YulAssignment","src":"307:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"319:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"330:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"315:3:3"},"nodeType":"YulFunctionCall","src":"315:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"307:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"360:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"342:6:3"},"nodeType":"YulFunctionCall","src":"342:25:3"},"nodeType":"YulExpressionStatement","src":"342:25:3"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"266:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"277:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"288:4:3","type":""}],"src":"196:177:3"},{"body":{"nodeType":"YulBlock","src":"483:510:3","statements":[{"body":{"nodeType":"YulBlock","src":"529:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"538:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"541:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"531:6:3"},"nodeType":"YulFunctionCall","src":"531:12:3"},"nodeType":"YulExpressionStatement","src":"531:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"504:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"513:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"500:3:3"},"nodeType":"YulFunctionCall","src":"500:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"525:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"496:3:3"},"nodeType":"YulFunctionCall","src":"496:32:3"},"nodeType":"YulIf","src":"493:52:3"},{"nodeType":"YulVariableDeclaration","src":"554:37:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"568:12:3"},"nodeType":"YulFunctionCall","src":"568:23:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"558:6:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"600:28:3","value":{"kind":"number","nodeType":"YulLiteral","src":"610:18:3","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"604:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"655:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"664:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"667:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"657:6:3"},"nodeType":"YulFunctionCall","src":"657:12:3"},"nodeType":"YulExpressionStatement","src":"657:12:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"643:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"651:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"640:2:3"},"nodeType":"YulFunctionCall","src":"640:14:3"},"nodeType":"YulIf","src":"637:34:3"},{"nodeType":"YulVariableDeclaration","src":"680:32:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"694:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"705:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"690:3:3"},"nodeType":"YulFunctionCall","src":"690:22:3"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"684:2:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"760:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"772:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"762:6:3"},"nodeType":"YulFunctionCall","src":"762:12:3"},"nodeType":"YulExpressionStatement","src":"762:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"739:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"743:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"735:3:3"},"nodeType":"YulFunctionCall","src":"735:13:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"731:3:3"},"nodeType":"YulFunctionCall","src":"731:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"724:6:3"},"nodeType":"YulFunctionCall","src":"724:35:3"},"nodeType":"YulIf","src":"721:55:3"},{"nodeType":"YulVariableDeclaration","src":"785:30:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"812:2:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"799:12:3"},"nodeType":"YulFunctionCall","src":"799:16:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"789:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"842:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"851:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"854:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"844:6:3"},"nodeType":"YulFunctionCall","src":"844:12:3"},"nodeType":"YulExpressionStatement","src":"844:12:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"830:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"838:2:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"827:2:3"},"nodeType":"YulFunctionCall","src":"827:14:3"},"nodeType":"YulIf","src":"824:34:3"},{"body":{"nodeType":"YulBlock","src":"916:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"925:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"928:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"918:6:3"},"nodeType":"YulFunctionCall","src":"918:12:3"},"nodeType":"YulExpressionStatement","src":"918:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"881:2:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"889:1:3","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"892:6:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"885:3:3"},"nodeType":"YulFunctionCall","src":"885:14:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:3"},"nodeType":"YulFunctionCall","src":"877:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"902:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"873:3:3"},"nodeType":"YulFunctionCall","src":"873:32:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"907:7:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"870:2:3"},"nodeType":"YulFunctionCall","src":"870:45:3"},"nodeType":"YulIf","src":"867:65:3"},{"nodeType":"YulAssignment","src":"941:21:3","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"955:2:3"},{"kind":"number","nodeType":"YulLiteral","src":"959:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:3"},"nodeType":"YulFunctionCall","src":"951:11:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"941:6:3"}]},{"nodeType":"YulAssignment","src":"971:16:3","value":{"name":"length","nodeType":"YulIdentifier","src":"981:6:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"971:6:3"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"441:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"452:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"464:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"472:6:3","type":""}],"src":"378:615:3"},{"body":{"nodeType":"YulBlock","src":"1099:102:3","statements":[{"nodeType":"YulAssignment","src":"1109:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:3"},"nodeType":"YulFunctionCall","src":"1117:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1166:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1182:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1187:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1178:3:3"},"nodeType":"YulFunctionCall","src":"1178:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"1191:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1174:3:3"},"nodeType":"YulFunctionCall","src":"1174:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1162:3:3"},"nodeType":"YulFunctionCall","src":"1162:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:3"},"nodeType":"YulFunctionCall","src":"1144:51:3"},"nodeType":"YulExpressionStatement","src":"1144:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:3","type":""}],"src":"998:203:3"},{"body":{"nodeType":"YulBlock","src":"1380:230:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1397:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1408:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:3"},"nodeType":"YulFunctionCall","src":"1390:21:3"},"nodeType":"YulExpressionStatement","src":"1390:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1431:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1442:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1427:3:3"},"nodeType":"YulFunctionCall","src":"1427:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"1447:2:3","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1420:6:3"},"nodeType":"YulFunctionCall","src":"1420:30:3"},"nodeType":"YulExpressionStatement","src":"1420:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1470:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1481:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:3"},"nodeType":"YulFunctionCall","src":"1466:18:3"},{"hexValue":"4d65726b6c654469737472696275746f723a2044726f7020616c726561647920","kind":"string","nodeType":"YulLiteral","src":"1486:34:3","type":"","value":"MerkleDistributor: Drop already "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1459:6:3"},"nodeType":"YulFunctionCall","src":"1459:62:3"},"nodeType":"YulExpressionStatement","src":"1459:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1541:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1552:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1537:3:3"},"nodeType":"YulFunctionCall","src":"1537:18:3"},{"hexValue":"636c61696d65642e","kind":"string","nodeType":"YulLiteral","src":"1557:10:3","type":"","value":"claimed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1530:6:3"},"nodeType":"YulFunctionCall","src":"1530:38:3"},"nodeType":"YulExpressionStatement","src":"1530:38:3"},{"nodeType":"YulAssignment","src":"1577:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1589:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1600:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:3"},"nodeType":"YulFunctionCall","src":"1585:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1577:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1357:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1371:4:3","type":""}],"src":"1206:404:3"},{"body":{"nodeType":"YulBlock","src":"1734:110:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1751:3:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1764:2:3","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"1768:6:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1760:3:3"},"nodeType":"YulFunctionCall","src":"1760:15:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1781:26:3","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1777:3:3"},"nodeType":"YulFunctionCall","src":"1777:31:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1756:3:3"},"nodeType":"YulFunctionCall","src":"1756:53:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1744:6:3"},"nodeType":"YulFunctionCall","src":"1744:66:3"},"nodeType":"YulExpressionStatement","src":"1744:66:3"},{"nodeType":"YulAssignment","src":"1819:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1830:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"1835:2:3","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:3"},"nodeType":"YulFunctionCall","src":"1826:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1819:3:3"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1710:3:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1715:6:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1726:3:3","type":""}],"src":"1615:229:3"},{"body":{"nodeType":"YulBlock","src":"2023:223:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2040:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2051:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2033:6:3"},"nodeType":"YulFunctionCall","src":"2033:21:3"},"nodeType":"YulExpressionStatement","src":"2033:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2074:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2085:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:3"},"nodeType":"YulFunctionCall","src":"2070:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"2090:2:3","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2063:6:3"},"nodeType":"YulFunctionCall","src":"2063:30:3"},"nodeType":"YulExpressionStatement","src":"2063:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2113:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2124:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2109:3:3"},"nodeType":"YulFunctionCall","src":"2109:18:3"},{"hexValue":"4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"2129:34:3","type":"","value":"MerkleDistributor: Invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2102:6:3"},"nodeType":"YulFunctionCall","src":"2102:62:3"},"nodeType":"YulExpressionStatement","src":"2102:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2195:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:3"},"nodeType":"YulFunctionCall","src":"2180:18:3"},{"hexValue":"2e","kind":"string","nodeType":"YulLiteral","src":"2200:3:3","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:3"},"nodeType":"YulFunctionCall","src":"2173:31:3"},"nodeType":"YulExpressionStatement","src":"2173:31:3"},{"nodeType":"YulAssignment","src":"2213:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2236:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2221:3:3"},"nodeType":"YulFunctionCall","src":"2221:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2213:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2000:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2014:4:3","type":""}],"src":"1849:397:3"},{"body":{"nodeType":"YulBlock","src":"2380:145:3","statements":[{"nodeType":"YulAssignment","src":"2390:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2413:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2398:3:3"},"nodeType":"YulFunctionCall","src":"2398:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2390:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2432:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2447:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2463:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2468:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2459:3:3"},"nodeType":"YulFunctionCall","src":"2459:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2455:3:3"},"nodeType":"YulFunctionCall","src":"2455:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2443:3:3"},"nodeType":"YulFunctionCall","src":"2443:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2425:6:3"},"nodeType":"YulFunctionCall","src":"2425:51:3"},"nodeType":"YulExpressionStatement","src":"2425:51:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2496:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2507:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:3"},"nodeType":"YulFunctionCall","src":"2492:18:3"},{"name":"value1","nodeType":"YulIdentifier","src":"2512:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2485:6:3"},"nodeType":"YulFunctionCall","src":"2485:34:3"},"nodeType":"YulExpressionStatement","src":"2485:34:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2341:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2352:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2360:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2371:4:3","type":""}],"src":"2251:274:3"},{"body":{"nodeType":"YulBlock","src":"2608:199:3","statements":[{"body":{"nodeType":"YulBlock","src":"2654:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2663:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2666:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2656:6:3"},"nodeType":"YulFunctionCall","src":"2656:12:3"},"nodeType":"YulExpressionStatement","src":"2656:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2629:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2638:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2625:3:3"},"nodeType":"YulFunctionCall","src":"2625:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2650:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2621:3:3"},"nodeType":"YulFunctionCall","src":"2621:32:3"},"nodeType":"YulIf","src":"2618:52:3"},{"nodeType":"YulVariableDeclaration","src":"2679:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2698:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2692:5:3"},"nodeType":"YulFunctionCall","src":"2692:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2683:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2761:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2770:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2773:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2763:6:3"},"nodeType":"YulFunctionCall","src":"2763:12:3"},"nodeType":"YulExpressionStatement","src":"2763:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2730:5:3"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2751:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2744:6:3"},"nodeType":"YulFunctionCall","src":"2744:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2737:6:3"},"nodeType":"YulFunctionCall","src":"2737:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2727:2:3"},"nodeType":"YulFunctionCall","src":"2727:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2720:6:3"},"nodeType":"YulFunctionCall","src":"2720:40:3"},"nodeType":"YulIf","src":"2717:60:3"},{"nodeType":"YulAssignment","src":"2786:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"2796:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2786:6:3"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2574:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2585:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2597:6:3","type":""}],"src":"2530:277:3"},{"body":{"nodeType":"YulBlock","src":"2986:225:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2996:6:3"},"nodeType":"YulFunctionCall","src":"2996:21:3"},"nodeType":"YulExpressionStatement","src":"2996:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3037:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3048:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3033:3:3"},"nodeType":"YulFunctionCall","src":"3033:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"3053:2:3","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3026:6:3"},"nodeType":"YulFunctionCall","src":"3026:30:3"},"nodeType":"YulExpressionStatement","src":"3026:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3076:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3087:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3072:3:3"},"nodeType":"YulFunctionCall","src":"3072:18:3"},{"hexValue":"4d65726b6c654469737472696275746f723a205472616e73666572206661696c","kind":"string","nodeType":"YulLiteral","src":"3092:34:3","type":"","value":"MerkleDistributor: Transfer fail"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3065:6:3"},"nodeType":"YulFunctionCall","src":"3065:62:3"},"nodeType":"YulExpressionStatement","src":"3065:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3158:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3143:3:3"},"nodeType":"YulFunctionCall","src":"3143:18:3"},{"hexValue":"65642e","kind":"string","nodeType":"YulLiteral","src":"3163:5:3","type":"","value":"ed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3136:6:3"},"nodeType":"YulFunctionCall","src":"3136:33:3"},"nodeType":"YulExpressionStatement","src":"3136:33:3"},{"nodeType":"YulAssignment","src":"3178:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3190:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3201:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3186:3:3"},"nodeType":"YulFunctionCall","src":"3186:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2963:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2977:4:3","type":""}],"src":"2812:399:3"},{"body":{"nodeType":"YulBlock","src":"3248:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3265:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3277:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3268:3:3"},"nodeType":"YulFunctionCall","src":"3268:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3258:6:3"},"nodeType":"YulFunctionCall","src":"3258:31:3"},"nodeType":"YulExpressionStatement","src":"3258:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3305:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3308:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3298:6:3"},"nodeType":"YulFunctionCall","src":"3298:15:3"},"nodeType":"YulExpressionStatement","src":"3298:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3329:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3332:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3322:6:3"},"nodeType":"YulFunctionCall","src":"3322:15:3"},"nodeType":"YulExpressionStatement","src":"3322:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3216:127:3"},{"body":{"nodeType":"YulBlock","src":"3395:185:3","statements":[{"body":{"nodeType":"YulBlock","src":"3434:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3455:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3467:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3458:3:3"},"nodeType":"YulFunctionCall","src":"3458:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3448:6:3"},"nodeType":"YulFunctionCall","src":"3448:31:3"},"nodeType":"YulExpressionStatement","src":"3448:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3499:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3502:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3492:6:3"},"nodeType":"YulFunctionCall","src":"3492:15:3"},"nodeType":"YulExpressionStatement","src":"3492:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3530:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3520:6:3"},"nodeType":"YulFunctionCall","src":"3520:15:3"},"nodeType":"YulExpressionStatement","src":"3520:15:3"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3411:5:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3422:1:3","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3418:3:3"},"nodeType":"YulFunctionCall","src":"3418:6:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3408:2:3"},"nodeType":"YulFunctionCall","src":"3408:17:3"},"nodeType":"YulIf","src":"3405:140:3"},{"nodeType":"YulAssignment","src":"3554:20:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3565:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3572:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3561:3:3"},"nodeType":"YulFunctionCall","src":"3561:13:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3554:3:3"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3377:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3387:3:3","type":""}],"src":"3348:232:3"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"MerkleDistributor: Drop already \")\n        mstore(add(headStart, 96), \"claimed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"MerkleDistributor: Invalid proof\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"MerkleDistributor: Transfer fail\")\n        mstore(add(headStart, 96), \"ed.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"585":[{"length":32,"start":174},{"length":32,"start":645}],"587":[{"length":32,"start":114},{"length":32,"start":457}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c806305748be2146100515780632eb4a7ab1461006d578063b391c50814610094578063fc0c546a146100a9575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61005a7f000000000000000000000000000000000000000000000000000000000000000081565b6100a76100a236600461042b565b6100e8565b005b6100d07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b336000908152600160205260409020541561015b5760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201526731b630b4b6b2b21760c11b60648201526084015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506101f48383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506103969050565b61024a5760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b6064820152608401610152565b336000818152600160208190526040808320919091559054905163a9059cbb60e01b8152600481019290925260248201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156102c957600080fd5b505af11580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906104a0565b6103595760405162461bcd60e51b815260206004820152602360248201527f4d65726b6c654469737472696275746f723a205472616e73666572206661696c60448201526232b21760e91b6064820152608401610152565b60005460405190815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505050565b6000826103a385846103ac565b14949350505050565b600081815b84518110156103f1576103dd828683815181106103d0576103d06104c2565b60200260200101516103f9565b9150806103e9816104d8565b9150506103b1565b509392505050565b6000818310610415576000828152602084905260409020610424565b60008381526020839052604090205b9392505050565b6000806020838503121561043e57600080fd5b823567ffffffffffffffff8082111561045657600080fd5b818501915085601f83011261046a57600080fd5b81358181111561047957600080fd5b8660208260051b850101111561048e57600080fd5b60209290920196919550909350505050565b6000602082840312156104b257600080fd5b8151801515811461042457600080fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156104fa57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f3acd0a42116d1a26a350b8e6038f8169688172f46ad1eaa85e6515174cdad5c64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5748BE2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB391C508 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A2044726F7020616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x31B630B4B6B2B217 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1F4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH32 0x0 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x396 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A20496E76616C69642070726F6F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x152 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A205472616E73666572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x32B217 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A3 DUP6 DUP5 PUSH2 0x3AC JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH2 0x3DD DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3D0 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x3E9 DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x415 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xAC 0xD0 LOG4 0x21 AND 0xD1 LOG2 PUSH11 0x350B8E6038F8169688172F CHAINID 0xAD 0x1E 0xAA DUP6 0xE6 MLOAD MLOAD PUSH21 0xCDAD5C64736F6C6343000809003300000000000000 ","sourceMap":"197:1169:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:25;;;;;;;;;160::3;;;148:2;133:18;312:25:2;;;;;;;;270:35;;;;;750:613;;;;;;:::i;:::-;;:::i;:::-;;231:30;;;;;;;;-1:-1:-1;;;;;1162:32:3;;;1144:51;;1132:2;1117:18;231:30:2;998:203:3;750:613:2;842:10;825:28;;;;:16;:28;;;;;;:33;817:86;;;;-1:-1:-1;;;817:86:2;;1408:2:3;817:86:2;;;1390:21:3;1447:2;1427:18;;;1420:30;1486:34;1466:18;;;1459:62;-1:-1:-1;;;1537:18:3;;;1530:38;1585:19;;817:86:2;;;;;;;;;976:28;;-1:-1:-1;;993:10:2;1764:2:3;1760:15;1756:53;976:28:2;;;1744:66:3;951:12:2;;1826::3;;976:28:2;;;;;;;;;;;;966:39;;;;;;951:54;;1024:49;1043:11;;1024:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1056:10:2;;-1:-1:-1;1068:4:2;;-1:-1:-1;1024:18:2;;-1:-1:-1;1024:49:2:i;:::-;1016:95;;;;-1:-1:-1;;;1016:95:2;;2051:2:3;1016:95:2;;;2033:21:3;2090:2;2070:18;;;2063:30;2129:34;2109:18;;;2102:62;-1:-1:-1;;;2180:18:3;;;2173:31;2221:19;;1016:95:2;1849:397:3;1016:95:2;1187:10;1170:28;;;;1201:1;1170:28;;;;;;;;:32;;;;1256:10;;1221:46;;-1:-1:-1;;;1221:46:2;;;;;2425:51:3;;;;2492:18;;;2485:34;-1:-1:-1;;;;;1228:5:2;1221:22;;;;2398:18:3;;1221:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1213:94;;;;-1:-1:-1;;;1213:94:2;;3014:2:3;1213:94:2;;;2996:21:3;3053:2;3033:18;;;3026:30;3092:34;3072:18;;;3065:62;-1:-1:-1;;;3143:18:3;;;3136:33;3186:19;;1213:94:2;2812:399:3;1213:94:2;1344:10;;1325:30;;160:25:3;;;1333:10:2;;1325:30;;148:2:3;133:18;1325:30:2;;;;;;;806:557;750:613;;:::o;1153:184:1:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:1:o;1991:290::-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:1;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:1;1991:290;-1:-1:-1;;;1991:290:1:o;8054:147::-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:1:o;378:615:3:-;464:6;472;525:2;513:9;504:7;500:23;496:32;493:52;;;541:1;538;531:12;493:52;581:9;568:23;610:18;651:2;643:6;640:14;637:34;;;667:1;664;657:12;637:34;705:6;694:9;690:22;680:32;;750:7;743:4;739:2;735:13;731:27;721:55;;772:1;769;762:12;721:55;812:2;799:16;838:2;830:6;827:14;824:34;;;854:1;851;844:12;824:34;907:7;902:2;892:6;889:1;885:14;881:2;877:23;873:32;870:45;867:65;;;928:1;925;918:12;867:65;959:2;951:11;;;;;981:6;;-1:-1:-1;378:615:3;;-1:-1:-1;;;;378:615:3:o;2530:277::-;2597:6;2650:2;2638:9;2629:7;2625:23;2621:32;2618:52;;;2666:1;2663;2656:12;2618:52;2698:9;2692:16;2751:5;2744:13;2737:21;2730:5;2727:32;2717:60;;2773:1;2770;2763:12;3216:127;3277:10;3272:3;3268:20;3265:1;3258:31;3308:4;3305:1;3298:15;3332:4;3329:1;3322:15;3348:232;3387:3;-1:-1:-1;;3408:17:3;;3405:140;;;3467:10;3462:3;3458:20;3455:1;3448:31;3502:4;3499:1;3492:15;3530:4;3527:1;3520:15;3405:140;-1:-1:-1;3572:1:3;3561:13;;3348:232::o"},"methodIdentifiers":{"claim(bytes32[])":"b391c508","dropAmount()":"05748be2","merkleRoot()":"2eb4a7ab","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dropAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dropAmount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleDistributor.sol\":\"MerkleDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"contracts/MerkleDistributor.sol\":{\"keccak256\":\"0x9980228c0de8a9f3babc4e1483b6f4ef01874c901a04042c21d52b73e05fad27\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11a41475dda7e67f693fd13c59a9618a0cd1058433a29bce7df4d2bb7bec3431\",\"dweb:/ipfs/QmQEG16yNk5kpLGHwA4xqAZ6raZ7wKzaAvWz8vujmyYcC2\"]}},\"version\":1}"}}}}}